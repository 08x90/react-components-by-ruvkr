const fs = require('fs');
const util = require('util');
const path = require('path');

const readDir = util.promisify(fs.readdir);
const writeFile = util.promisify(fs.writeFile);

const getSvgsInDir = dirPath => {
  return readDir(dirPath)
    .then(files => files.filter(file => /\.svg$/i.test(file)))
    .catch(console.log);
};

const getNames = files => {
  return files.map(file => {
    const fileName = file
      .replace(/\.svg$/i, '')
      .replace(/[^A-Z0-9]/gi, ' ')
      .replace(/(^\w|\s\w)/g, m => m.toUpperCase())
      .replace(/\s/g, '');
    return { import: fileName + 'Svg', export: fileName, file: file };
  });
};

const getModules = fileNames => {
  let importsString =
    "// This file is auto generated by generateIndex.js\n\nimport { withStyle } from './withStyle';\n\n";
  let exportsString = '\n';

  fileNames.forEach(name => {
    importsString += `import { ReactComponent as ${name.import} } from './svg/${name.file}';\n`;
    exportsString += `export const ${name.export} = withStyle(${name.import});\n`;
  });

  return importsString + exportsString;
};

const writeIndex = (path, strings) => {
  writeFile(path, strings, { encoding: 'utf-8' })
    .then(_ => console.log('index.ts created!'))
    .catch(console.log);
};

(async _ => {
  const svgsPath = path.join(__dirname, 'svg');
  const indexPath = path.join(__dirname, 'index.ts');
  const svgs = await getSvgsInDir(svgsPath);
  const fileNames = getNames(svgs);
  const strings = getModules(fileNames);
  await writeIndex(indexPath, strings);
})();
